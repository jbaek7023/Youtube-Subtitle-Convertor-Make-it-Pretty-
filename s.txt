 now we finally have all the tools for describing the perceptron algorithm we start with a random equation which will determine some line and two regions the positive and the negative region now we'll move this line around to get a better and better fit so we ask all the points how they're doing the four correctly classified points say I'm good and the two incorrectly classified points say come closer so let's listen to the point in the right and apply the trick to make the line closer to this point so here it is now this point is good now let's listen to the point on the left the points has come closer we apply the trick and now the line goes closer to it and it actually goes over it classifying it correctly now every point is correctly classified and happy so let's actually write the pseudocode for this perceptron algorithm we start with random weights W 1 up to W N and B this gives us the equation W X plus B the line and the positive and negative areas now for every misclassified point with coordinates x1 up to xn we do the following if the prediction was 0 which means the point is a positive point in the negative area then we'll update the weights as follows for I equals 1 to N we change WI to WI plus alpha times X i where alpha is the learning rate in this case we're using zero point 1 sometimes we'll use 0.01 etc it depends then we also change the bias unit to be plus alpha that moves the line closer to the misclassified point now if the prediction was 1 which means a point is a negative point in the positive area then we'll update the weights in a similar way except we subtract instead of adding this means for I equals 1 change WI to WI minus alpha ixi and change the bias unit B to be minus alpha and now the line moves closer to our misclassified point and now we just repeat the step until we get no errors or until we have a number of error that is small or simply we can just say do the step a thousand times and stop we'll see what our options later in the class